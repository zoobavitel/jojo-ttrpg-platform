# Generated by Django 5.2 on 2025-05-07 02:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hp_cost', models.IntegerField()),
                ('required', models.BooleanField(default=False)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Heritage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('base_hp', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('gm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns_led', to=settings.AUTH_USER_MODEL)),
                ('players', models.ManyToManyField(related_name='campaigns_joined', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('tier', models.IntegerField(default=0)),
                ('hold', models.CharField(choices=[('weak', 'Weak'), ('strong', 'Strong')], default='weak', max_length=10)),
                ('rep', models.IntegerField(default=0)),
                ('heat', models.IntegerField(default=0)),
                ('wanted_level', models.IntegerField(default=0)),
                ('coin', models.IntegerField(default=0)),
                ('stash', models.IntegerField(default=0)),
                ('claims', models.JSONField(default=dict)),
                ('upgrades', models.JSONField(default=list)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crews', to='characters.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='Detriment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('hp_value', models.IntegerField()),
                ('required', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('heritage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detriments', to='characters.heritage')),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('true_name', models.CharField(max_length=100)),
                ('alias', models.CharField(blank=True, max_length=100, null=True)),
                ('appearance', models.TextField(blank=True, null=True)),
                ('bonus_hp_from_xp', models.IntegerField(default=0)),
                ('background_note', models.TextField(blank=True, null=True)),
                ('background_note2', models.TextField(blank=True, null=True)),
                ('action_dots', models.JSONField(default=dict)),
                ('playbook', models.CharField(choices=[('STAND', 'Stand'), ('HAMON', 'Hamon'), ('SPIN', 'Spin')], default='STAND', max_length=20)),
                ('stand_type', models.CharField(blank=True, max_length=50, null=True)),
                ('stand_name', models.CharField(blank=True, max_length=100, null=True)),
                ('stand_form', models.TextField(blank=True, null=True)),
                ('stand_conscious', models.BooleanField(default=True)),
                ('coin_stats', models.JSONField(default=dict)),
                ('armor_type', models.CharField(blank=True, choices=[('LIGHT', 'Light'), ('MEDIUM', 'Medium'), ('HEAVY', 'Heavy'), ('ENCUMBERED', 'Encumbered')], max_length=20, null=True)),
                ('close_friend', models.CharField(blank=True, max_length=100)),
                ('rival', models.CharField(blank=True, max_length=100)),
                ('vice_details', models.TextField(blank=True, null=True)),
                ('loadout', models.IntegerField(default=1)),
                ('stress', models.IntegerField(default=0)),
                ('trauma', models.JSONField(default=list)),
                ('healing_clock_segments', models.IntegerField(default=4)),
                ('healing_clock_filled', models.IntegerField(default=0)),
                ('light_armor_used', models.BooleanField(default=False)),
                ('medium_armor_used', models.BooleanField(default=False)),
                ('heavy_armor_used', models.BooleanField(default=False)),
                ('harm_level1_used', models.BooleanField(default=False)),
                ('harm_level1_name', models.CharField(blank=True, max_length=100, null=True)),
                ('harm_level2_used', models.BooleanField(default=False)),
                ('harm_level2_name', models.CharField(blank=True, max_length=100, null=True)),
                ('harm_level3_used', models.BooleanField(default=False)),
                ('harm_level3_name', models.CharField(blank=True, max_length=100, null=True)),
                ('harm_level4_used', models.BooleanField(default=False)),
                ('harm_level4_name', models.CharField(blank=True, max_length=100, null=True)),
                ('xp_clocks', models.JSONField(default=dict)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='characters', to='characters.campaign')),
                ('selected_benefits', models.ManyToManyField(blank=True, related_name='characters', to='characters.benefit')),
                ('special_ability', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='characters.ability')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('crew', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='characters.crew')),
                ('selected_detriments', models.ManyToManyField(blank=True, related_name='characters', to='characters.detriment')),
                ('heritage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='characters.heritage')),
                ('vice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='characters.vice')),
            ],
        ),
        migrations.AddField(
            model_name='benefit',
            name='heritage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='characters.heritage'),
        ),
        migrations.CreateModel(
            name='NPC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('stats', models.JSONField(default=dict)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='npcs', to='characters.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='Stand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('Close-Range', 'Close-Range'), ('Long-Distance', 'Long-Distance'), ('Automatic', 'Automatic'), ('Range-Irrelevant', 'Range-Irrelevant')], max_length=30)),
                ('form', models.CharField(choices=[('Humanoid', 'Humanoid'), ('Non-Humanoid', 'Non-Humanoid'), ('Phenomenon', 'Phenomenon')], max_length=30)),
                ('consciousness_level', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F')], max_length=1)),
                ('power', models.CharField(choices=[('S', 'S - Exceptional'), ('A', 'A - Elite'), ('B', 'B - Skilled'), ('C', 'C - Average'), ('D', 'D - Below Average'), ('F', 'F - Flawed')], max_length=1)),
                ('speed', models.CharField(choices=[('S', 'S - Exceptional'), ('A', 'A - Elite'), ('B', 'B - Skilled'), ('C', 'C - Average'), ('D', 'D - Below Average'), ('F', 'F - Flawed')], max_length=1)),
                ('range', models.CharField(choices=[('S', 'S - Exceptional'), ('A', 'A - Elite'), ('B', 'B - Skilled'), ('C', 'C - Average'), ('D', 'D - Below Average'), ('F', 'F - Flawed')], max_length=1)),
                ('durability', models.CharField(choices=[('S', 'S - Exceptional'), ('A', 'A - Elite'), ('B', 'B - Skilled'), ('C', 'C - Average'), ('D', 'D - Below Average'), ('F', 'F - Flawed')], max_length=1)),
                ('precision', models.CharField(choices=[('S', 'S - Exceptional'), ('A', 'A - Elite'), ('B', 'B - Skilled'), ('C', 'C - Average'), ('D', 'D - Below Average'), ('F', 'F - Flawed')], max_length=1)),
                ('development', models.CharField(choices=[('S', 'S - Exceptional'), ('A', 'A - Elite'), ('B', 'B - Skilled'), ('C', 'C - Average'), ('D', 'D - Below Average'), ('F', 'F - Flawed')], max_length=1)),
                ('unique_ability', models.TextField()),
                ('character', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stand', to='characters.character')),
                ('standard_ability', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='characters.ability')),
            ],
        ),
    ]
