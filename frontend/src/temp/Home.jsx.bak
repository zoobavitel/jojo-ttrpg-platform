import React, { useState, useEffect, useRef } from 'react';
import { Plus, ArrowRight, Zap, Users, Dice6, BookOpen, Settings } from 'lucide-react';
import CharacterSheetWrapper from './Character'; // Assuming Character.jsx exports CharacterSheetWrapper

// Main Home Page Component
const HomePage = () => {
  const [showCharacterSheet, setShowCharacterSheet] = useState(false);
  const [characters, setCharacters] = useState([
    // Example character
    {
      id: 1,
      name: 'METAL FINGERS',
      standName: 'MADVILLAINY',
      heritage: 'Cyborg',
      background: 'Underground Rapper',
      look: 'Terminator Robot with a TV static look',
      vice: 'Art',
      crew: 'DOOM SQUAD',
      actionRatings: {
        HUNT: 2, STUDY: 1, SURVEY: 1, TINKER: 3,
        FINESSE: 2, PROWL: 1, SKIRMISH: 2, WRECK: 1,
        BIZARRE: 1, COMMAND: 2, CONSORT: 1, SWAY: 2
      },
      standStats: { power: 3, speed: 2, range: 1, durability: 2, precision: 1, development: 1 }
    }
  ]);
  const [campaigns] = useState([
    // Example campaigns
    {
      id: 1,
      name: 'Diamond is Unbreakable',
      role: 'Player',
      gmName: 'Hirohiko Araki',
      playerCount: 4,
      maxPlayers: 5,
      nextSession: '2024-01-15 19:00',
      description: 'A bizarre murder mystery in the town of Morioh',
      status: 'Active',
      characterName: 'METAL FINGERS'
    },
    {
      id: 2,
      name: 'Steel Ball Run',
      role: 'GM',
      playerCount: 3,
      maxPlayers: 4,
      nextSession: '2024-01-18 20:00',
      description: 'Cross-country race across America with supernatural powers',
      status: 'Active'
    },
    {
      id: 3,
      name: 'Stone Ocean Chronicles',
      role: 'Player',
      gmName: 'DIO Brando',
      playerCount: 2,
      maxPlayers: 6,
      nextSession: 'TBD',
      description: 'Prison break adventure with cosmic stakes',
      status: 'Recruiting',
      characterName: null
    }
  ]);
  const [selectedCharacter, setSelectedCharacter] = useState(null);

  const handleCreateCharacter = () => {
    setSelectedCharacter(null);
    setShowCharacterSheet(true);
  };

  const handleCreateNewFromSheet = () => {
    // Save current character first if there are changes
    setSelectedCharacter(null);
    // Keep the sheet open but clear the character data for a new one
  };

  const handleSwitchCharacter = (character) => {
    setSelectedCharacter(character);
  };

  const handleEditCharacter = (character) => {
    setSelectedCharacter(character);
    setShowCharacterSheet(true);
  };

  const handleCloseSheet = () => {
    setShowCharacterSheet(false);
    setSelectedCharacter(null);
  };

  const handleSaveCharacter = (characterData) => {
    if (selectedCharacter) {
      // Edit existing character
      setCharacters(characters.map(char => 
        char.id === selectedCharacter.id ? characterData : char
      ));
    } else {
      // Create new character
      setCharacters([...characters, characterData]);
    }
    setShowCharacterSheet(false);
    setSelectedCharacter(null);
  };

  const handleDeleteCharacter = (characterId) => {
    // Replace window.confirm with a modal or other UI element
    console.log(`Request to delete character ${characterId}`);
    setCharacters(characters.filter(char => char.id !== characterId));
  };

  const handleJoinCampaign = (campaignId) => {
    // Logic for joining a campaign
    console.log('Joining campaign:', campaignId);
  };

  const handleCreateCampaign = () => {
    // Logic for creating a new campaign
    console.log('Creating new campaign');
  };

  const handleManageCampaign = (campaignId) => {
    // Logic for managing a campaign (GM view)
    console.log('Managing campaign:', campaignId);
  };

  return (
    <div className="min-h-screen bg-black text-white font-mono text-sm">
      {/* Header */}
      <header className="bg-gray-800 px-4 py-2 flex items-center justify-between border-b border-gray-600 sticky top-0 z-10">
        <div className="text-xl font-bold text-white cursor-pointer">
          1(800)BIZARRE - HOME
        </div>
        <div className="flex items-center space-x-4">
          <button 
            onClick={handleCreateCharacter}
            className="bg-green-600 hover:bg-green-700 px-3 py-1 rounded text-xs font-bold"
          >
            Create Character
          </button>
          <button className="text-gray-400 hover:text-white">
            <Settings className="w-6 h-6" />
          </button>
        </div>
      </header>

      <div className="p-4">
        {/* Hero Section */}
        <section className="relative pt-8 pb-12 px-6 overflow-hidden">
          {/* Background Effects */}
          <div className="absolute inset-0 opacity-10">
            <div className="absolute top-20 left-10 w-32 h-32 bg-purple-500 rounded-full blur-3xl animate-pulse"></div>
            <div className="absolute bottom-20 right-10 w-40 h-40 bg-red-500 rounded-full blur-3xl animate-pulse delay-1000"></div>
            <div className="absolute top-1/2 left-1/2 w-60 h-60 bg-yellow-500 rounded-full blur-3xl animate-pulse delay-500"></div>
          </div>

        <div className="max-w-7xl mx-auto text-center relative z-10">
          {/* Main Title */}
          <h1 className="text-6xl md:text-8xl font-bold text-white mb-6 tracking-wider">
            <span className="bg-gradient-to-r from-red-400 via-purple-400 to-yellow-400 bg-clip-text text-transparent">
              1(800)BIZARRE
            </span>
          </h1>
          
          {/* Subtitle */}
          <h2 className="text-2xl md:text-4xl font-bold text-gray-300 mb-8">
            A JoJo's Bizarre Adventure TTRPG
          </h2>
          
          {/* Description */}
          <p className="text-xl md:text-2xl text-gray-400 max-w-4xl mx-auto mb-12 leading-relaxed">
            Create <span className="text-purple-400 font-semibold">stylish weirdos</span> with 
            <span className="text-red-400 font-semibold"> supernatural powers</span>, embark on 
            <span className="text-yellow-400 font-semibold"> bizarre missions</span>, and discover whether 
            your crew can hold it together when everything—and everyone—starts to fall apart.
          </p>
          
          {/* Main CTA Button */}
          <div className="flex flex-col sm:flex-row gap-6 justify-center items-center mb-12">
            <button 
              onClick={handleCreateCharacter}
              className="group bg-gradient-to-r from-purple-600 to-red-600 hover:from-purple-700 hover:to-red-700 text-white px-12 py-6 rounded-lg font-bold text-2xl transition-all duration-300 transform hover:scale-105 shadow-2xl flex items-center gap-4"
            >
              <Plus className="w-8 h-8 group-hover:animate-pulse" />
              Create Character
              <ArrowRight className="w-6 h-6 group-hover:translate-x-1 transition-transform" />
            </button>
          </div>

          {/* Character Gallery */}
          {characters.length > 0 && (
            <div className="max-w-6xl mx-auto mb-16">
              <h3 className="text-3xl font-bold text-white mb-8">Your Characters</h3>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {characters.map((character) => (
                  <div key={character.id} className="bg-gray-800 border border-gray-600 rounded-lg p-6 hover:border-purple-500 transition-all duration-300 group">
                    <div className="text-center mb-4">
                      <h4 className="text-xl font-bold text-white mb-2">{character.name}</h4>
                      <p className="text-purple-400 font-semibold mb-2">「{character.standName}」</p>
                      <p className="text-gray-400 text-sm mb-2">{character.heritage}</p>
                      <p className="text-gray-500 text-xs">{character.background}</p>
                    </div>
                    <div className="flex space-x-2">
                      <button 
                        onClick={() => handleEditCharacter(character)}
                        className="flex-1 bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded transition-colors text-sm"
                      >
                        Edit Sheet
                      </button>
                      <button 
                        onClick={() => handleDeleteCharacter(character.id)}
                        className="bg-red-600 hover:bg-red-700 text-white py-2 px-3 rounded transition-colors text-sm"
                      >
                        ✕
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Campaign Gallery */}
          {campaigns.length > 0 && (
            <div className="max-w-6xl mx-auto">
              <h3 className="text-3xl font-bold text-white mb-8">Your Campaigns</h3>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {campaigns.map((campaign) => (
                  <div key={campaign.id} className="bg-gray-800 border border-gray-600 rounded-lg p-6 hover:border-yellow-500 transition-all duration-300 group">
                    <div className="mb-4">
                      <div className="flex items-center justify-between mb-2">
                        <h4 className="text-xl font-bold text-white">{campaign.name}</h4>
                        <span className={`px-2 py-1 text-xs rounded ${
                          campaign.status === 'Active' ? 'bg-green-600 text-white' :
                          campaign.status === 'Recruiting' ? 'bg-yellow-600 text-white' :
                          'bg-gray-600 text-white'
                        }`}>
                          {campaign.status}
                        </span>
                      </div>
                      <p className="text-gray-400 text-sm mb-3">{campaign.description}</p>
                      
                      <div className="space-y-1 text-xs text-gray-300">
                        <div className="flex justify-between">
                          <span>Role:</span>
                          <span className={campaign.role === 'GM' ? 'text-yellow-400 font-bold' : 'text-blue-400'}>{campaign.role}</span>
                        </div>
                        {campaign.gmName && (
                          <div className="flex justify-between">
                            <span>GM:</span>
                            <span>{campaign.gmName}</span>
                          </div>
                        )}
                        <div className="flex justify-between">
                          <span>Players:</span>
                          <span>{campaign.playerCount}/{campaign.maxPlayers}</span>
                        </div>
                        {campaign.characterName && (
                          <div className="flex justify-between">
                            <span>Character:</span>
                            <span className="text-purple-400">{campaign.characterName}</span>
                          </div>
                        )}
                        <div className="flex justify-between">
                          <span>Next Session:</span>
                          <span>{campaign.nextSession}</span>
                        </div>
                      </div>
                    </div>
                    
                    <div className="flex space-x-2">
                      <button 
                        onClick={() => campaign.role === 'GM' ? handleManageCampaign(campaign.id) : handleJoinCampaign(campaign.id)}
                        className="flex-1 bg-yellow-600 hover:bg-yellow-700 text-white py-2 px-4 rounded transition-colors text-sm"
                      >
                        {campaign.role === 'GM' ? 'Manage' : 'Join Session'}
                      </button>
                      <button className="bg-gray-600 hover:bg-gray-700 text-white py-2 px-3 rounded transition-colors text-sm">
                        ⚙️
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
        </section>

        {/* Features Section */}
        <section className="py-20 px-6 bg-black/50 backdrop-blur-sm">
          <div className="max-w-7xl mx-auto">
            <h3 className="text-4xl md:text-5xl font-bold text-white text-center mb-16">
              Why <span className="text-red-400">1(800)BIZARRE</span>?
            </h3>
            
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {/* Feature 1 */}
              <div className="group bg-gray-900 border border-gray-700 rounded-xl p-8 hover:border-purple-500 transition-all duration-300 transform hover:scale-105 hover:shadow-2xl">
                <div className="bg-purple-600 w-16 h-16 rounded-full flex items-center justify-center mb-6 group-hover:animate-pulse">
                  <Zap className="w-8 h-8 text-white" />
                </div>
                <h4 className="text-2xl font-bold text-white mb-4">Unique Stands</h4>
                <p className="text-gray-400 leading-relaxed">
                  Create supernatural abilities as unique as your character. From time manipulation to reality bending, 
                  your Stand reflects your inner self and fighting style.
                </p>
              </div>

              {/* Feature 2 */}
              <div className="group bg-gray-900 border border-gray-700 rounded-xl p-8 hover:border-red-500 transition-all duration-300 transform hover:scale-105 hover:shadow-2xl">
                <div className="bg-red-600 w-16 h-16 rounded-full flex items-center justify-center mb-6 group-hover:animate-pulse">
                  <Users className="w-8 h-8 text-white" />
                </div>
                <h4 className="text-2xl font-bold text-white mb-4">Team Dynamics</h4>
                <p className="text-gray-400 leading-relaxed">
                  Collaborate with your crew through teamwork mechanics. Assist allies, lead group actions, 
                  and discover the power of friendship in the face of bizarre threats.
                </p>
              </div>

              {/* Feature 3 */}
              <div className="group bg-gray-900 border border-gray-700 rounded-xl p-8 hover:border-yellow-500 transition-all duration-300 transform hover:scale-105 hover:shadow-2xl">
                <div className="bg-yellow-600 w-16 h-16 rounded-full flex items-center justify-center mb-6 group-hover:animate-pulse">
                  <Dice6 className="w-8 h-8 text-white" />
                </div>
                <h4 className="text-2xl font-bold text-white mb-4">Interactive Sheets</h4>
                <p className="text-gray-400 leading-relaxed">
                  Full-featured digital character sheets with dice rolling, progress tracking, and all the tools 
                  you need for an epic JoJo adventure.
                </p>
              </div>
            </div>
          </div>
        </section>

        {/* Quick Actions Section */}
        <section className="py-20 px-6">
          <div className="max-w-7xl mx-auto">
            <h3 className="text-4xl md:text-5xl font-bold text-white text-center mb-16">
              Quick <span className="text-purple-400">Actions</span>
            </h3>
            
            <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
              <button 
                onClick={handleCreateCharacter}
                className="group bg-gradient-to-br from-purple-600 to-purple-800 hover:from-purple-500 hover:to-purple-700 rounded-xl p-8 transition-all duration-300 transform hover:scale-105 shadow-2xl text-left"
              >
                <Plus className="w-12 h-12 text-white mb-4 group-hover:animate-pulse" />
                <h4 className="text-2xl font-bold text-white mb-3">Create Character</h4>
                <p className="text-purple-200">Build your next Stand user and start your bizarre adventure.</p>
                <ArrowRight className="w-6 h-6 text-white mt-4 group-hover:translate-x-2 transition-transform" />
              </button>

              <div className="group bg-gradient-to-br from-yellow-600 to-yellow-800 hover:from-yellow-500 hover:to-yellow-700 rounded-xl p-8 transition-all duration-300 transform hover:scale-105 shadow-2xl">
                <Users className="w-12 h-12 text-white mb-4 group-hover:animate-pulse" />
                <h4 className="text-2xl font-bold text-white mb-3">Join Campaign</h4>
                <p className="text-yellow-200">Find other players and embark on group adventures.</p>
                <ArrowRight className="w-6 h-6 text-white mt-4 group-hover:translate-x-2 transition-transform" />
              </div>

              <div className="group bg-gradient-to-br from-red-600 to-red-800 hover:from-red-500 hover:to-red-700 rounded-xl p-8 transition-all duration-300 transform hover:scale-105 shadow-2xl">
                <BookOpen className="w-12 h-12 text-white mb-4 group-hover:animate-pulse" />
                <h4 className="text-2xl font-bold text-white mb-3">Learn Rules</h4>
                <p className="text-red-200">Master the mechanics of Stands, Hamon, and Spin techniques.</p>
                <ArrowRight className="w-6 h-6 text-white mt-4 group-hover:translate-x-2 transition-transform" />
              </div>

              <button 
                onClick={handleCreateCampaign}
                className="group bg-gradient-to-br from-green-600 to-green-800 hover:from-green-500 hover:to-green-700 rounded-xl p-8 transition-all duration-300 transform hover:scale-105 shadow-2xl text-left"
              >
                <Settings className="w-12 h-12 text-white mb-4 group-hover:animate-pulse" />
                <h4 className="text-2xl font-bold text-white mb-3">Create Campaign</h4>
                <p className="text-green-200">Start your own bizarre adventure as Game Master.</p>
                <ArrowRight className="w-6 h-6 text-white mt-4 group-hover:translate-x-2 transition-transform" />
              </button>
            </div>
          </div>
        </section>

        {/* Character Sheet Modal */}
        {showCharacterSheet && (
          <CharacterSheetWrapper
            character={selectedCharacter}
            onClose={handleCloseSheet}
            onSave={handleSaveCharacter}
            onCreateNew={handleCreateNewFromSheet}
            onSwitchCharacter={handleSwitchCharacter}
            allCharacters={characters}
          />
        )}
      </div>
    </div>
  );
};

export default HomePage;